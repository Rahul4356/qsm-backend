name: Build, Test, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake gcc g++ libssl-dev ninja-build
    
    - name: Build and install liboqs
      run: |
        git clone --depth 1 https://github.com/open-quantum-safe/liboqs.git
        cd liboqs
        mkdir build && cd build
        cmake -GNinja -DBUILD_SHARED_LIBS=ON ..
        ninja
        sudo ninja install
        sudo ldconfig
        cd ../..
        rm -rf liboqs
    
    - name: Install liboqs-python
      run: |
        pip install cython numpy
        git clone --depth 1 https://github.com/open-quantum-safe/liboqs-python.git
        cd liboqs-python
        pip install .
        cd ..
        rm -rf liboqs-python
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cryptography
        pip install -r requirements.txt
    
    - name: Test OQS installation
      run: |
        python -c "import oqs; print('OQS Version:', oqs.oqs_version())"
    
    - name: Test quantum crypto
      run: |
        python -c "from service_quantum import test_quantum_crypto; test_quantum_crypto()"

  deploy-to-azure:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Simple deployment without Docker
    - name: Create deployment package
      run: |
        zip -r deploy.zip . -x ".git/*" -x ".github/*" -x "*.pyc" -x "__pycache__/*" -x "venv/*" -x ".venv/*"
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'qsm-backend'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './deploy.zip'
    
    # Note: For Docker deployment, add these credentials to GitHub secrets:
    # - REGISTRY_URL (e.g., myregistry.azurecr.io)
    # - REGISTRY_USERNAME
    # - REGISTRY_PASSWORD
    # - AZURE_WEBAPP_PUBLISH_PROFILE